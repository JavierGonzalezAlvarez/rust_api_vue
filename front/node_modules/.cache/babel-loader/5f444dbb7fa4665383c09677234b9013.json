{"remainingRequest":"/home/javier/Escritorio/Proyectos/rust/rust_vue/front/node_modules/babel-loader/lib/index.js!/home/javier/Escritorio/Proyectos/rust/rust_vue/front/node_modules/eslint-loader/index.js??ref--13-0!/home/javier/Escritorio/Proyectos/rust/rust_vue/front/src/components/usuario/Api.js","dependencies":[{"path":"/home/javier/Escritorio/Proyectos/rust/rust_vue/front/src/components/usuario/Api.js","mtime":1631468931534},{"path":"/home/javier/Escritorio/Proyectos/rust/rust_vue/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/javier/Escritorio/Proyectos/rust/rust_vue/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/javier/Escritorio/Proyectos/rust/rust_vue/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2phdmllci9Fc2NyaXRvcmlvL1Byb3llY3Rvcy9ydXN0L3J1c3RfdnVlL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9qYXZpZXIvRXNjcml0b3Jpby9Qcm95ZWN0b3MvcnVzdC9ydXN0X3Z1ZS9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL2phdmllci9Fc2NyaXRvcmlvL1Byb3llY3Rvcy9ydXN0L3J1c3RfdnVlL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Cgp2YXIgQXBpID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBBcGkoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXBpKTsKCiAgICB0aGlzLlNFUlZFUl9VUkwgPSAnaHR0cDovLzEyNy4wLjAuMTo4MDgwLyc7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQXBpLCBbewogICAga2V5OiAiZ2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKG5vbWJyZSkgewogICAgICAgIHZhciBpZCwKICAgICAgICAgICAgdXJsLAogICAgICAgICAgICByZXMsCiAgICAgICAgICAgIGl0ZW1zLAogICAgICAgICAgICBpdGVtczEsCiAgICAgICAgICAgIF9hcmdzID0gYXJndW1lbnRzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlkID0gX2FyZ3MubGVuZ3RoID4gMSAmJiBfYXJnc1sxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3NbMV0gOiAtMTsKICAgICAgICAgICAgICAgIHVybCA9IHRoaXMuU0VSVkVSX1VSTCArIG5vbWJyZTsgLy8gKyAiLyI7CgogICAgICAgICAgICAgICAgaWYgKGlkICE9PSAtMSkgewogICAgICAgICAgICAgICAgICB1cmwgKz0gaWQgKyAiLyI7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInVybCBzb2xpY2l0YWRhID0+ICIsIHVybCk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCh1cmwsIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgICAgICAgLy9tb2RlOiAnbm8tY29ycycsCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAgIC8vJ0NvbnRlbnQtVHlwZSc6ICd0ZXh0L3BsYWluJywKICAgICAgICAgICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonCiAgICAgICAgICAgICAgICAgIH0gLy9ib2R5OiBKU09OLnN0cmluZ2lmeSgpLAoKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmJvZHk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGl0ZW1zID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXNwdWVzdGEgMCA9PiIsIGl0ZW1zKTsgLy92YXIgaXRlbXMxID0gaXRlbXMuc3Vic3RyaW5nKDEsIGl0ZW1zLmxlbmd0aCAtIDEpOwoKICAgICAgICAgICAgICAgIGl0ZW1zMSA9IGl0ZW1zOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInJlc3B1ZXN0YSAxID0+IiwgaXRlbXMxKTsgLy9qc29uT2JqWzBdCiAgICAgICAgICAgICAgICAvL2NvbnN0IGl0ZW1zID0gSlNPTi5wYXJzZShpdGVtczEuX2JvZHkpOwogICAgICAgICAgICAgICAgLy9jb25zdCBpdGVtcyA9IGF3YWl0IHJlcy5qc29uKCk7CgogICAgICAgICAgICAgICAgaWYgKCEoaXRlbXMucmVzdWx0cyA9PT0gdW5kZWZpbmVkKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coaXRlbXMxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXNwdWVzdGEgMiA9PiIsIGl0ZW1zMSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBpdGVtczEpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhpdGVtczEucmVzdWx0cyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygicmVzcHVlc3RhIDMgPT4iLCBpdGVtczEpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgaXRlbXMxLnJlc3VsdHMpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldChfeCkgewogICAgICAgIHJldHVybiBfZ2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXQ7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBBcGk7Cn0oKTsKCmV4cG9ydCB7IEFwaSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/javier/Escritorio/Proyectos/rust/rust_vue/front/src/components/usuario/Api.js"],"names":["Api","SERVER_URL","nombre","id","url","console","log","fetch","method","headers","res","body","items","items1","results","undefined"],"mappings":";;;;;;IAAqBA,G;AACnB,iBAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,wBAAlB;AACD;;;;;yEAED,iBAAUC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,gBAAAA,EAAlB,2DAAuB,CAAC,CAAxB;AAEMC,gBAAAA,GAFN,GAEY,KAAKH,UAAL,GAAkBC,MAF9B,EAEsC;;AACpC,oBAAIC,EAAE,KAAK,CAAC,CAAZ,EAAe;AACbC,kBAAAA,GAAG,IAAID,EAAE,GAAG,GAAZ;AACD;;AAEDE,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AAPF;AAAA,uBASoBG,KAAK,CAACH,GAAD,EAAM;AAC3BI,kBAAAA,MAAM,EAAE,KADmB;AAE3B;AACAC,kBAAAA,OAAO,EAAE;AACP,oCAAgB,kBADT;AAEP;AACA,mDAA+B;AAHxB,mBAHkB,CAQ3B;;AAR2B,iBAAN,CATzB;;AAAA;AASQC,gBAAAA,GATR;AAAA;AAAA,uBAoBsBA,GAAG,CAACC,IApB1B;;AAAA;AAoBQC,gBAAAA,KApBR;AAqBEP,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,KAA9B,EArBF,CAsBE;;AACMC,gBAAAA,MAvBR,GAuBiBD,KAvBjB;AAwBEP,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B,EAxBF,CAyBE;AAEA;AAEA;;AA7BF,sBA+BMD,KAAK,CAACE,OAAN,KAAkBC,SA/BxB;AAAA;AAAA;AAAA;;AAgCI;AACAV,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B;AAjCJ,iDAkCWA,MAlCX;;AAAA;AAoCE;AACAR,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,MAA9B;AArCF,iDAsCSA,MAAM,CAACC,OAtChB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SALmBd,G","sourcesContent":["export default class Api {\n  constructor() {\n    this.SERVER_URL = 'http://127.0.0.1:8080/'\n  }\n\n  async get(nombre, id = -1) {\n\n    let url = this.SERVER_URL + nombre; // + \"/\";\n    if (id !== -1) {\n      url += id + \"/\"\n    }\n\n    console.log(\"url solicitada => \", url)\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      //mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json',\n        //'Content-Type': 'text/plain',\n        'Access-Control-Allow-Origin': '*',\n      }\n      //body: JSON.stringify(),\n    });\n    //const items = await res.json();\n    const items = await res.body;\n    console.log(\"respuesta 0 =>\", items);\n    //var items1 = items.substring(1, items.length - 1);\n    const items1 = items;\n    console.log(\"respuesta 1 =>\", items1);\n    //jsonObj[0]\n\n    //const items = JSON.parse(items1._body);\n\n    //const items = await res.json();\n\n    if (items.results === undefined) {\n      //console.log(items1);\n      console.log(\"respuesta 2 =>\", items1);\n      return items1\n    }\n    //console.log(items1.results);\n    console.log(\"respuesta 3 =>\", items1);\n    return items1.results;\n  }\n\n\n\n}"]}]}